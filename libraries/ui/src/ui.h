// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.5.0
// LVGL version: 8.3.11
// Project name: Test

#ifndef _TEST_UI_H
#define _TEST_UI_H

#ifdef __cplusplus
extern "C" {
#endif

#if defined __has_include
#if __has_include("lvgl.h")
#include "lvgl.h"
#elif __has_include("lvgl/lvgl.h")
#include "lvgl/lvgl.h"
#else
#include "lvgl.h"
#endif
#else
#include "lvgl.h"
#endif

#include "ui_helpers.h"
#include "ui_events.h"

void Needle_Animation(lv_obj_t * TargetObject, int delay);

// SCREEN: ui_Screen1
void ui_Screen1_screen_init(void);
extern lv_obj_t * ui_Screen1;
extern lv_obj_t * ui_HomeScreenPanel;
extern lv_obj_t * ui_HomeScreenBG;
extern lv_obj_t * ui_TopPanel;
extern lv_obj_t * ui_HomeTopPanelLabel;
extern lv_obj_t * ui_SpeedBG;
extern lv_obj_t * ui_Slider2;
extern lv_obj_t * ui_MotorRPMPanel;
extern lv_obj_t * ui_MotorMaxRPM;
extern lv_obj_t * ui_SpeedIndicatorPanel;
extern lv_obj_t * ui_MotorRpm;
extern lv_obj_t * ui_Status_Panel;
extern lv_obj_t * ui_StatusLabel;
extern lv_obj_t * ui_OperationMode;
extern lv_obj_t * ui_MotorStatus;
extern lv_obj_t * ui_SelectedProfileNumber1;
extern lv_obj_t * ui_Spinner;
void ui_event_SettingPanels(lv_event_t * e);
extern lv_obj_t * ui_SettingPanels;
void ui_event_SettingPageLabel(lv_event_t * e);
extern lv_obj_t * ui_SettingPageLabel;
extern lv_obj_t * ui_SelectedProfile;
extern lv_obj_t * ui_StartPanel;
void ui_event_StartLabel(lv_event_t * e);
extern lv_obj_t * ui_StartLabel;
// CUSTOM VARIABLES

// SCREEN: ui_Screen2
void ui_Screen2_screen_init(void);
extern lv_obj_t * ui_Screen2;
extern lv_obj_t * ui_SettingScreenPanel;
extern lv_obj_t * ui_TopPanelSetting;
extern lv_obj_t * ui_SettingTopPanelLabel1;
void ui_event_ToMainMenuPanel(lv_event_t * e);
extern lv_obj_t * ui_ToMainMenuPanel;
extern lv_obj_t * ui_ToMainMenuLabel;
void ui_event_ProfilePanel1(lv_event_t * e);
extern lv_obj_t * ui_ProfilePanel1;
extern lv_obj_t * ui_Profile1;
extern lv_obj_t * ui_ProfileLabel1;
void ui_event_ProfilePanel2(lv_event_t * e);
extern lv_obj_t * ui_ProfilePanel2;
extern lv_obj_t * ui_Profile2;
extern lv_obj_t * ui_ProfileLabel2;
void ui_event_ProfilePanel3(lv_event_t * e);
extern lv_obj_t * ui_ProfilePanel3;
extern lv_obj_t * ui_Profile3;
extern lv_obj_t * ui_ProfileLabel3;
void ui_event_ProfilePanel4(lv_event_t * e);
extern lv_obj_t * ui_ProfilePanel4;
extern lv_obj_t * ui_Profile4;
extern lv_obj_t * ui_ProfileLabel4;
// CUSTOM VARIABLES

// SCREEN: ui_Screen3
void ui_Screen3_screen_init(void);
extern lv_obj_t * ui_Screen3;
extern lv_obj_t * ui_EditProfileScreenPanel1;
extern lv_obj_t * ui_EditProfileTopPanel1;
extern lv_obj_t * ui_EditProfileTopLabel;
void ui_event_EditProfileBackPanel(lv_event_t * e);
extern lv_obj_t * ui_EditProfileBackPanel;
extern lv_obj_t * ui_EditProfileBackLabel;
void ui_event_EditProfileSelectPanel(lv_event_t * e);
extern lv_obj_t * ui_EditProfileSelectPanel;
extern lv_obj_t * ui_EditProfileSelectLabel;
void ui_event_Keyboard(lv_event_t * e);
extern lv_obj_t * ui_Keyboard;
extern lv_obj_t * ui_PanelForParams;
extern lv_obj_t * ui_TimeLabel1;
void ui_event_Time1(lv_event_t * e);
extern lv_obj_t * ui_Time1;
extern lv_obj_t * ui_RPMLabel1;
void ui_event_RPM1(lv_event_t * e);
extern lv_obj_t * ui_RPM1;
extern lv_obj_t * ui_TimeLabel2;
void ui_event_Time2(lv_event_t * e);
extern lv_obj_t * ui_Time2;
extern lv_obj_t * ui_RPMLabel2;
void ui_event_RPM2(lv_event_t * e);
extern lv_obj_t * ui_RPM2;
extern lv_obj_t * ui_TimeLabel3;
void ui_event_Time3(lv_event_t * e);
extern lv_obj_t * ui_Time3;
extern lv_obj_t * ui_RPMLabel3;
void ui_event_RPM3(lv_event_t * e);
extern lv_obj_t * ui_RPM3;
extern lv_obj_t * ui_TimeLabel4;
void ui_event_Time4(lv_event_t * e);
extern lv_obj_t * ui_Time4;
extern lv_obj_t * ui_RPMLabel4;
void ui_event_RPM4(lv_event_t * e);
extern lv_obj_t * ui_RPM4;
extern lv_obj_t * ui_TimeLabel5;
void ui_event_Time5(lv_event_t * e);
extern lv_obj_t * ui_Time5;
extern lv_obj_t * ui_RPMLabel5;
void ui_event_RPM5(lv_event_t * e);
extern lv_obj_t * ui_RPM5;
extern lv_obj_t * ui_TimeLabel6;
void ui_event_Time6(lv_event_t * e);
extern lv_obj_t * ui_Time6;
extern lv_obj_t * ui_RPMLabel6;
void ui_event_RPM6(lv_event_t * e);
extern lv_obj_t * ui_RPM6;
extern lv_obj_t * ui_TimeLabel7;
void ui_event_Time7(lv_event_t * e);
extern lv_obj_t * ui_Time7;
extern lv_obj_t * ui_RPMLabel7;
void ui_event_RPM7(lv_event_t * e);
extern lv_obj_t * ui_RPM7;
extern lv_obj_t * ui_TimeLabel8;
void ui_event_Time8(lv_event_t * e);
extern lv_obj_t * ui_Time8;
extern lv_obj_t * ui_RPMLabel8;
void ui_event_RPM8(lv_event_t * e);
extern lv_obj_t * ui_RPM8;
extern lv_obj_t * ui_TimeLabel9;
void ui_event_Time9(lv_event_t * e);
extern lv_obj_t * ui_Time9;
extern lv_obj_t * ui_RPMLabel9;
void ui_event_RPM9(lv_event_t * e);
extern lv_obj_t * ui_RPM9;
extern lv_obj_t * ui_TimeLabel10;
void ui_event_Time10(lv_event_t * e);
extern lv_obj_t * ui_Time10;
extern lv_obj_t * ui_RPMLabel10;
void ui_event_RPM10(lv_event_t * e);
extern lv_obj_t * ui_RPM10;
extern lv_obj_t * ui_EditProfile;
// CUSTOM VARIABLES
extern lv_obj_t * uic_Time1;

// SCREEN: ui_Screen4
void ui_Screen4_screen_init(void);
extern lv_obj_t * ui_Screen4;
extern lv_obj_t * ui_SettingScreenPanel1;
extern lv_obj_t * ui_TopPanelStart;
extern lv_obj_t * ui_TopPanelStartLabel;
void ui_event_ToMainMenuPanel1(lv_event_t * e);
extern lv_obj_t * ui_ToMainMenuPanel1;
extern lv_obj_t * ui_ToMainMenuLabel1;
void ui_event_ToMainMenuPanel2(lv_event_t * e);
extern lv_obj_t * ui_ToMainMenuPanel2;
extern lv_obj_t * ui_ToMainMenuLabel2;
extern lv_obj_t * ui_RunningProfilePanel;
extern lv_obj_t * ui_RunningProfile;
extern lv_obj_t * ui_SpeedPanel;
extern lv_obj_t * ui_BGSpeed;
extern lv_obj_t * ui_Needle;
extern lv_obj_t * ui_RedArc;
void ui_event_StartButton(lv_event_t * e);
extern lv_obj_t * ui_StartButton;
extern lv_obj_t * ui_RunLabel;
void ui_event_StopButton(lv_event_t * e);
extern lv_obj_t * ui_StopButton;
extern lv_obj_t * ui_StopLabel;
extern lv_obj_t * ui_RPMPanel;
extern lv_obj_t * ui_Label6;
extern lv_obj_t * ui_RPMLabel;
extern lv_obj_t * ui_RunMotorProfilePanel;
extern lv_obj_t * ui_RunMotorProfileLabel;
extern lv_obj_t * ui_Spinner3;
// CUSTOM VARIABLES

// SCREEN: ui_Screen5
void ui_Screen5_screen_init(void);
extern lv_obj_t * ui_Screen5;
extern lv_obj_t * ui_ManualRunScreenPanel;
extern lv_obj_t * ui_ManualPanelTop;
extern lv_obj_t * ui_ManualRunLabel;
void ui_event_ToMainMenuPanel3(lv_event_t * e);
extern lv_obj_t * ui_ToMainMenuPanel3;
extern lv_obj_t * ui_ToMainMenuLabel3;
extern lv_obj_t * ui_SpeedPanel1;
extern lv_obj_t * ui_BGSpeed1;
extern lv_obj_t * ui_Needle1;
extern lv_obj_t * ui_Arc2;
void ui_event_StartManualButton(lv_event_t * e);
extern lv_obj_t * ui_StartManualButton;
extern lv_obj_t * ui_RunLabel1;
void ui_event_StopButton1(lv_event_t * e);
extern lv_obj_t * ui_StopButton1;
extern lv_obj_t * ui_StopLabel1;
extern lv_obj_t * ui_RPMPanel1;
extern lv_obj_t * ui_Label1;
extern lv_obj_t * ui_RPMLabel11;
void ui_event_RpmKnob(lv_event_t * e);
extern lv_obj_t * ui_RpmKnob;
extern lv_obj_t * ui_ManualMinRPM;
extern lv_obj_t * ui_ManualMaxRPM;
extern lv_obj_t * ui_ManualRPMLabel;
void ui_event_minus50Button(lv_event_t * e);
extern lv_obj_t * ui_minus50Button;
extern lv_obj_t * ui_minus50Label;
void ui_event_plus50Button(lv_event_t * e);
extern lv_obj_t * ui_plus50Button;
extern lv_obj_t * ui_plus50Label;
extern lv_obj_t * ui_Spinner4;
// CUSTOM VARIABLES

// EVENTS

extern lv_obj_t * ui____initial_actions0;

// IMAGES AND IMAGE SETS
LV_IMG_DECLARE(ui_img_789391261);    // assets/—Pngtree—gray blue futuristic technology sense_6594007.png
LV_IMG_DECLARE(ui_img_speedbg_png);    // assets/speedBG.png
LV_IMG_DECLARE(ui_img_speedfg_png);    // assets/speedFG.png
LV_IMG_DECLARE(ui_img_942215904);    // assets/gauge-bg.png
LV_IMG_DECLARE(ui_img_1601502596);    // assets/gauge-needle.png
LV_IMG_DECLARE(ui_img_1798728470);    // assets/gauge-indicator.png

// FONTS
LV_FONT_DECLARE(ui_font_Display_16);
LV_FONT_DECLARE(ui_font_Font_10);
LV_FONT_DECLARE(ui_font_Font_12);
LV_FONT_DECLARE(ui_font_Font_20);
LV_FONT_DECLARE(ui_font_Font_24);
LV_FONT_DECLARE(ui_font_Font_30);
LV_FONT_DECLARE(ui_font_Font_8);

// UI INIT
void ui_init(void);

#ifdef __cplusplus
} /*extern "C"*/
#endif

#endif
